//  ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏ß‡∏¥‡∏ò‡∏µ‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î ‚Üí ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
// ‡πÅ‡∏•‡πâ‡∏ß‡∏£‡∏∞‡∏ö‡∏ö‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
//‚úÖ ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
import React, { useState } from 'react';

function Consulting() {
  const [formData, setFormData] = useState({
    weight: '',
    size: '',
    destination: '',
  });
  const [recommendation, setRecommendation] = useState(null);

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleConsult = () => {
    // ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ê‡∏≤‡∏ô‡∏ß‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡πÅ‡∏•‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
    if (formData.weight && formData.destination) {
      if (parseFloat(formData.weight) < 2) {
        setRecommendation('üöÄ ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏™‡πà‡∏á: Kerry Express (‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß‡πÅ‡∏•‡∏∞‡∏£‡∏≤‡∏Ñ‡∏≤‡∏õ‡∏£‡∏∞‡∏´‡∏¢‡∏±‡∏î)');
      } else if (parseFloat(formData.weight) < 10) {
        setRecommendation('üì¶ ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏™‡πà‡∏á: Flash Express (‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á)');
      } else {
        setRecommendation('üöö ‡πÉ‡∏ä‡πâ‡∏Ç‡∏ô‡∏™‡πà‡∏á: SCG Logistics ‡∏´‡∏£‡∏∑‡∏≠ J&T Cargo (‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏Å‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏´‡∏ô‡∏±‡∏Å)');
      }
    } else {
      setRecommendation('‚ùå ‡πÇ‡∏õ‡∏£‡∏î‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô');
    }
  };

  return (
    <div className="bg-white min-h-screen p-4 sm:p-10 text-gray-900">
      <div className="bg-white shadow-md rounded-lg p-6">
        <h1 className="text-3xl font-bold mb-4 text-center">‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡∏õ‡∏£‡∏∂‡∏Å‡∏©‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó‡∏Ç‡∏ô‡∏™‡πà‡∏á</h1>
        
        <div className="grid gap-4">
          <div>
            <label className="block text-gray-700">‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (kg)</label>
            <input
              type="number"
              name="weight"
              value={formData.weight}
              onChange={handleChange}
              className="w-full p-2 border rounded"
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡πâ‡∏≥‡∏´‡∏ô‡∏±‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            />
          </div>

          <div>
            <label className="block text-gray-700">‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ (‡∏Å‡∏ß‡πâ‡∏≤‡∏áx‡∏¢‡∏≤‡∏ßx‡∏™‡∏π‡∏á cm)</label>
            <input
              type="text"
              name="size"
              value={formData.size}
              onChange={handleChange}
              className="w-full p-2 border rounded"
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            />
          </div>

          <div>
            <label className="block text-gray-700">‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á</label>
            <input
              type="text"
              name="destination"
              value={formData.destination}
              onChange={handleChange}
              className="w-full p-2 border rounded"
              placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏à‡∏±‡∏î‡∏™‡πà‡∏á"
            />
          </div>
        </div>

        <button
          className="mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition duration-200 w-full"
          onClick={handleConsult}
        >
          üîç ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡πâ‡∏°‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î
        </button>

        {recommendation && (
          <div className="mt-4 p-3 bg-gray-100 border-l-4 border-blue-500 text-gray-700">
            <strong>‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥:</strong> {recommendation}
          </div>
        )}
      </div>
    </div>
  );
}

export default Consulting;

